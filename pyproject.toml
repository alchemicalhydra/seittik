[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    '@(abc\.)?abstractmethod',
]
show_missing = true

[tool.coverage.run]
source = ["src"]

[tool.flake8]
ignore = [
  # "expected 1 blank line before a nested definition"
  'E306',
  # "redefinition of unused"
  # too many false positives, particularly within match blocks
  'F811',
  # defaults
  'E24',
  'E121',
  'E123',
  'E226',
  'E704',
  'W503',
  'W504',
]
max-line-length = 120
show-source = true

[tool.isort]
balanced_wrapping = true
combine_as_imports = true
default_section = 'THIRDPARTY'
force_sort_within_sections = true
include_trailing_comma = true
known_first_party = ['seittik']
multi_line_output = 5
order_by_type = false

[tool.poe.tasks]
# sphinx-build / sphinx-autobuild:
# -a : Write all files
# -b : Set builder
# -d : Doctree cache dir
# -E : Don't cache, always read
doc.cmd = './python_packages/bin/sphinx-build -a -E -d doc/.doctrees -b dirhtml doc doc/_build/html'
doc.help = "Build documentation"
doclive.cmd = './python_packages/bin/sphinx-autobuild -a -d doc/.doctrees -E -b dirhtml --watch src/seittik --watch CHANGELOG.md --watch LICENSE.md doc doc/_build/html'
doclive.help = "Build documentation with live autoreload"
# flake8
flake8.cmd = './python_packages/bin/flake8 src/seittik'
flake8.help = "Run flake8"
# nox:
nox.cmd = './python_packages/bin/nox'
nox.help = "Run nox"

[tool.poetry]
name = 'seittik'
version = '2023.04'
description = "A functional programming library that aims to supplant Python's existing functional interfaces, offering a more comprehensive and expressive alternative."
license = 'MIT'
authors = ['Tom Tobin <opensource@alchemicalhydra.com>']
readme = 'README.md'
keywords = [
  'functional',
  'functools',
  'iterable',
  'iteration',
  'iterator',
  'itertools',
  'lambda',
  'pipe',
  'shear',
]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Environment :: Console',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Topic :: Software Development :: Libraries',
  'Topic :: Software Development :: Libraries :: Python Modules',
]
packages = [
  { include = 'seittik', from = 'src' },
]

[tool.poetry.urls]
'Homepage' = 'https://seittik.com/'
'Documentation' = 'https://seittik.com/'
'Changelog' = 'https://seittik.com/changelog.html'
'Source Code' = 'https://github.com/alchemicalhydra/seittik'
'Issue Tracker' = 'https://github.com/alchemicalhydra/seittik/issues'

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
# General
ipython = ">=8.12.0"
# Tasks
poethepoet = ">=0.19.0"
# Tests
coverage = ">=7.2.3"
hypothesis = ">=6.70.2"
nox = ">=2022.11.21"
pyfakefs = ">=5.2.0"
pytest = ">=7.2.2"
pytest-cov = ">=4.0.0"
pytest-isort = ">=3.1.0"
pytest-xdist = ">=3.2.1"
# Linting
flake8 = ">=6.0.0"
flake8-pyproject = ">=1.2.3"
# Docs
myst-parser = ">=1.0.0"
pydata-sphinx-theme = ">=0.13.3"
sphinx = ">=6.1.3"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc2 = ">=0.4.2"
sphinxcontrib-dooble = ">=1.0.1"
sphinxcontrib-mermaid = ">=0.8.1"
# Necessary to avoid `sphinx-autobuild` needlessly chewing up CPU; its
# dependency `livereload` has this as a silent optional dependency of its own.
pyinotify = ">=0.9.6"

[tool.pytest.ini_options]
addopts = [
  '--cov',
  '--import-mode=importlib',
  '--pdbcls=IPython.terminal.debugger:TerminalPdb',
]
testpaths = [
  'test',
]
